syntax = "proto3";

package User;

service User {
  rpc GetDoctors (GetDoctorsRequest) returns (GetDoctorsResponse) {}
  rpc GetDoctorDetail (GetDoctorDetailRequest) returns (GetDoctorDetailResponse) {}
  rpc GetDoctorPracticeInfo (GetDoctorPracticeInfoRequest) returns (GetDoctorDetailResponse) {}
  rpc GetRecommendDoctors (GetRecommendDoctorsRequest) returns (GetRecommendDoctorsResponse) {}
}

message BiLang {
  string en = 1;
  string zh = 2;
}

message MutiPart {
  string Id = 1;
  BiLang Name = 2;
}

message Affiliation {
  string Id = 1;
  BiLang Name = 2;
  string HospitalLevel = 3;
}

message PracticeInfo {
  string UserId = 1;
  string AvatarFileName = 2;
  double AvatarVersion = 3;
  BiLang Expertise = 4;
  BiLang DisplayName = 5;
  Affiliation Affiliation = 6;
  MutiPart Department = 7;
  MutiPart SubDepartment = 8;
  BiLang Title = 9;
  bool InquiryEnabled = 10;
  int32 InquiryRate = 11;
  bool CheckInEnabled = 12;
  string UserName = 13;
  string p8Id = 14;
}

// The request message containing the user's name.
message GetDoctorsRequest {
  string PracticeSearchTerm = 1;
  int32 Skip = 2;
  int32 Take = 3;
  repeated string UserIds = 4;
  bool SortByName = 5;
  bool InquiryEnabled = 6;
  repeated string ExcludeUserIds = 7;
}

message GetDoctorsResponse {
  int32 Total = 1;
  repeated PracticeInfo Doctors = 2;
}

message GetDoctorPracticeInfoRequest {
  string PracticeInfoId = 1;
}

message GetDoctorDetailRequest {
  string UserId = 1;
}

message GetDoctorDetailResponse {
  PracticeInfo Doctor = 1;
}

message GetRecommendDoctorsRequest {
  int32 Skip = 1;
  int32 Take = 2;
  string PracticeSearchTerm = 3;
}

message GetRecommendDoctorsResponse {
  int32 Total = 1;
  repeated PracticeInfo Doctors = 2;
}
